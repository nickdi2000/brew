server {
    server_name brewtokens.com www.brewtokens.com;
    
        set $cors 'true';
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        add_header Content-Security-Policy "frame-ancestors 'self'"; #iframe

    location /test-server {
        add_header Content-Type text/plain;
        return 200 'test-server-returned-brewbucks-';
    }

    location /api {
        proxy_pass http://localhost:3391;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

     location /images/ {
        alias /opt/brewbucks/fe/dist/images/;
        expires max;
        add_header Cache-Control "public, no-transform";
        autoindex off;
        allow all;
        try_files $uri =404;
    }

    location / {
        root  /opt/brewbucks/fe/dist;
        expires    max;
        try_files $uri $uri/ /index.html;
    }

    listen 80;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/brewtokens.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/brewtokens.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}




server {
    listen 80;
    listen [::]:80;
    server_name brew.triviarat.com;

    return 301 $scheme://brewtokens.com$request_uri;
}